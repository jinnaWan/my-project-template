name: Backend Tests

on:
  push:
    branches: [ main ]
    paths:
      - 'MyProject.Api/**'
      - 'MyProject.Api.UnitTests/**'
      - 'MyProject.sln'
  pull_request:
    branches: [ main ]
    paths:
      - 'MyProject.Api/**'
      - 'MyProject.Api.UnitTests/**'
      - 'MyProject.sln'

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      # Method 1: Using dotnet-format
      - name: Install dotnet-format
        run: dotnet tool install -g dotnet-format
      
      - name: Run dotnet format
        run: dotnet format MyProject.sln --verify-no-changes

  test:
    name: Test
    needs: lint
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Install dependencies
        run: dotnet restore
      
      - name: Run tests with coverage
        run: dotnet test MyProject.sln --configuration Release --no-restore --collect:"XPlat Code Coverage"
      
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool
      
      - name: Generate coverage report
        run: |
          reportgenerator \
          -reports:**/coverage.cobertura.xml \
          -targetdir:coverage-report \
          -reporttypes:Html;Cobertura
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: '**/TestResults/*'
          retention-days: 7
      
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: coverage-report
          retention-days: 7

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'
      
      - name: Install dependencies
        run: dotnet restore
      
      - name: Build
        run: dotnet build MyProject.sln --configuration Release --no-restore
      
      - name: Publish
        run: dotnet publish MyProject.Api/MyProject.Api.csproj --configuration Release --no-restore --output ./publish
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: api-build
          path: ./publish
          retention-days: 7 